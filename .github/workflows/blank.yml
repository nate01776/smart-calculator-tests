name: Automated Test & Publish

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Validate-Design-on-Swaggerhub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Nodejs 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install SwaggerHub CLI
        run: |
          npm install swaggerhub-cli -g
      - name: Check for open comments
        run: |
          echo comments
      - name: Check for standardization issues
        run: |
          echo standards
  Run-Regression-Tests:
    # The type of runner that the job will run on
    needs: [Validate-Design-on-Swaggerhub]
    runs-on: ubuntu-latest
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so job can access it and uses the Node setup
        - uses: actions/checkout@v2
        - name: Use Nodejs 12.x
          uses: actions/setup-node@v1
          with:
            node-version: "12.x"
        # Install the CLI from NPM
        - name: Install the TestEngine-CLI
          run: | 
            npm install testengine-cli -g
        - name: Run TestEngine regression tagged tests
          env:
            TE_USER: ${{secrets.TESTENGINE_USER}}
            TE_PASS: ${{secrets.TESTENGINE_PASS}}
            TE_ADDR: ${{secrets.TESTENGINE_LOCATION}}
          run: |
            testengine -u $TE_USER -p $TE_PASS -H $TE_ADDR run project tags=regression envrionment=staging ./
          
  Run-New-Feature-Tests:
    runs-on: ubuntu-latest
    needs: [Validate-Design-on-Swaggerhub]
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so job can access it and uses the Node setup
        - uses: actions/checkout@v2
        - name: Use Nodejs 12.x
          uses: actions/setup-node@v1
          with:
            node-version: "12.x"
        # Install the CLI from NPM
        - name: Install the TestEngine-CLI
          run: | 
            npm install testengine-cli -g
        - name: Run TestEngine new feature tests
          env:
            TE_USER: ${{secrets.TESTENGINE_USER}}
            TE_PASS: ${{secrets.TESTENGINE_PASS}}
            TE_ADDR: ${{secrets.TESTENGINE_LOCATION}}
          run: |
            testengine -u $TE_USER -p $TE_PASS -H $TE_ADDR run project tags=newFeature envrionment=staging ./
          
  Publish-Documentation:
    runs-on: ubuntu-latest
    needs: [Run-Regression-Tests, Run-New-Feature-Tests]
    steps:
      - name: Let them know your working
        run: echo Hi from publish!
          
          # FILLER ROOM
          # FILLER ROOM
          # FILLER ROOM
